"""
LAMMPS EEX I/O
"""

import pandas as pd
import math
import numpy as np
import eex

from . import lammps_metadata as lmd

import logging
logger = logging.getLogger(__name__)


def write_lammps_file(dl, data, filename, blocksize=110):

    term_table = lmd.build_term_table("real")

    with open(filename, 'w') as data_file:

        data_file.write("# LAMMPS data file generated by MolSSI EEX\n\n")

        # Write header information
        for k in data["sizes"]:
            data_file.write(' '.join([str(data["sizes"][k]), k,'\n']))

        # Write box information
        box_size = dl.get_box_size()
        for coord in box_size:
            data_file.write(' '.join([str(box_size[coord][0]), str(box_size[coord][1]), ''.join([coord,"lo"]), ''.join([coord,"hi"]), "\n"]))

    
        data_file.write('\n')
        data_file.write("Pair Coeffs\n\n")
        data_file.write("NYI\n")

        bond_uids = dl.list_parameter_uids("bonds")
        if len(bond_uids) > 0:
            data_file.write('\n')
            data_file.write("Bond Coeffs\n\n")
            for uid in bond_uids:
                bond_coeffs = dl.get_parameter("bonds", uid)
                utype = term_table[2][bond_coeffs[0]]["utype"]
                bond_coeffs = dl.get_parameter("bonds", uid, utype=utype)
                value_list = list(bond_coeffs[1].values())
                value_string = ' '.join(str(x) for x in value_list)
                data_file.write(' '.join([str(uid), value_string, '\n']))

        angle_uids = dl.list_parameter_uids("angles")
        if len(angle_uids) > 0:
            data_file.write('\n')
            data_file.write("Angle Coeffs\n\n")
            for uid in angle_uids:
                angle_coeffs = dl.get_parameter("angles", uid)
                utype = term_table[3][angle_coeffs[0]]["utype"]
                angle_coeffs = dl.get_parameter("angles", uid, utype=utype)
                value_list = list(angle_coeffs[1].values())
                value_string = ' '.join(str(x) for x in value_list)
                data_file.write(' '.join([str(uid), value_string, '\n']))

        dihedral_uids = dl.list_parameter_uids("dihedrals")
        if len(dihedral_uids) > 0:
            data_file.write('\n')
            data_file.write("Dihedral Coeffs\n\n")
            for uid in dihedral_uids:
                dihedral_coeffs = dl.get_parameter("dihedrals", uid)
                utype = term_table[4][dihedral_coeffs[0]]["utype"]
                dihedral_coeffs = dl.get_parameter("dihedrals", uid, utype=utype)
                value_list = list(dihedral_coeffs[1].values())
                value_string = ' '.join(str(x) for x in value_list)
                data_file.write(' '.join([str(uid), value_string, '\n']))

        atoms = dl.get_atoms(["mass", "charge", "xyz"], by_value=True)
        if atoms.shape[0] > 0:
            data_file.write('\n')
            data_file.write("Masses\n\n")
            #atoms["mass"].to_string(data_file, header=None)
            for idx, mass in enumerate(np.unique(atoms["mass"])):
                data_file.write(' '.join([str(idx + 1), str(mass),'\n']))

            data_file.write('\n')
            data_file.write("Atoms\n\n")
            atoms[["charge", "X", "Y", "Z"]].to_string(data_file, header=None, index_names=False, index=True)
            data_file.write('\n')

        if len(bond_uids) > 0:
            data_file.write('\n')
            data_file.write("Bonds\n\n")
            bonds = dl.get_bonds()[["term_index", "atom1", "atom2"]]
            bonds.index = pd.RangeIndex(start=1, stop=bonds.shape[0] + 1)
            bonds.to_string(data_file, header=None)

        if len(angle_uids) > 0: 
            data_file.write('\n')
            data_file.write("\nAngles\n\n")
            angles = dl.get_angles()[["term_index", "atom1", "atom2", "atom3"]]
            angles.index = pd.RangeIndex(start=1, stop=angles.shape[0] + 1)
            angles.to_string(data_file, header=None)

        if len(dihedral_uids) > 0:
            data_file.write('\n')
            data_file.write("\nDihedrals\n\n")
            dihedrals = dl.get_dihedrals()[["term_index", "atom1", "atom2", "atom3", "atom4"]]
            dihedrals.index = pd.RangeIndex(start=1, stop=dihedrals.shape[0] + 1)
            dihedrals.to_string(data_file, header=None)
